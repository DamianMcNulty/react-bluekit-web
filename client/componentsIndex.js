/* eslint-disable */
// Generated by component library do not modify
import ComponentsNotFoundNotFound from './components/NotFound/NotFound.jsx';
import ComponentsPreviewButton from './components/preview/Button.react.js';
import ComponentsPreviewCheckbox from './components/preview/Checkbox.react.js';
import ComponentsPreviewErrorMessage from './components/preview/ErrorMessage.react.js';
import ComponentsPreviewHeading from './components/preview/Heading.react.js';
import ComponentsPreviewLoader from './components/preview/Loader.react.js';
import ComponentsPreviewLogo from './components/preview/Logo.js';
import ComponentsPreviewMultiField from './components/preview/MultiField.react.js';
import ComponentsPreviewPasswordField from './components/preview/PasswordField.react.js';
import ComponentsPreviewSpinner from './components/preview/Spinner.react.js';
import ComponentsPreviewTextField from './components/preview/TextField.react.js';
import ComponentsPreviewToolTip from './components/preview/ToolTip.react.js';

function dispatchEvent(data) {
  if (typeof window !== 'undefined')
    document.dispatchEvent(new BluekitEvent('functionTriggered', data));
  else
    console.log('Bluekit received function triggered', data)
}

export default {
  ComponentsNotFoundNotFound: {
    name: 'ComponentsNotFoundNotFound',
    menu: 'Components NotFound NotFound',
    file: './components/NotFound/NotFound.jsx',
    component: ComponentsNotFoundNotFound,
    componentName: 'NotFound',
    description: '',
    customProps: {},
    propsDefinition: {},
    simpleProps: {},
    fullProps: {}
  },
  ComponentsPreviewButton: {
    name: 'ComponentsPreviewButton',
    menu: 'Components Preview Button',
    file: './components/preview/Button.react.js',
    component: ComponentsPreviewButton,
    componentName: 'Button',
    description: '',
    customProps: {},
    propsDefinition: {children:{type:{name:"any"},required:true,description:""},className:{type:{name:"string"},required:false,description:""},disabled:{type:{name:"bool"},required:false,description:""},fullWidth:{type:{name:"bool"},required:false,description:""},inheritedStyle:{type:{name:"object"},required:false,description:""},kind:{type:{name:"enum",value:[{value:"'primary'",computed:false},{value:"'primaryInverted'",computed:false},{value:"'secondary'",computed:false},{value:"'simple'",computed:false}]},required:false,description:"",defaultValue:{value:"'primary'",computed:false}},loading:{type:{name:"bool"},required:false,description:"",defaultValue:{value:"false",computed:false}},loadingText:{type:{name:"string"},required:false,description:""},name:{type:{name:"string"},required:false,description:""},onClick:{type:{name:"func"},required:false,description:""},size:{type:{name:"enum",value:[{value:"'small'",computed:false},{value:"'large'",computed:false}]},required:false,description:""},type:{type:{name:"string"},required:false,description:""}},
    simpleProps: {onClick:function () { dispatchEvent({detail: {prop: "onClick"}}) },kind:"primary",loading:false,children:"ANY children"},
    fullProps: {size:"small",className:"className",loadingText:"loadingText",onClick:function () { dispatchEvent({detail: {prop: "onClick"}}) },name:"name",kind:"primary",fullWidth:true,inheritedStyle:{},type:"type",loading:false,disabled:true,children:"ANY children"}
  },
  ComponentsPreviewCheckbox: {
    name: 'ComponentsPreviewCheckbox',
    menu: 'Components Preview Checkbox',
    file: './components/preview/Checkbox.react.js',
    component: ComponentsPreviewCheckbox,
    componentName: 'Checkbox',
    description: '',
    customProps: {},
    propsDefinition: {error:{type:{name:"string"},required:false,description:""},label:{type:{name:"string"},required:true,description:""},name:{type:{name:"string"},required:true,description:""},onChange:{type:{name:"func"},required:false,description:""},tooltip:{type:{name:"string"},required:false,description:""},value:{type:{name:"bool"},required:false,description:""}},
    simpleProps: {label:"label",name:"name",onChange:function () { dispatchEvent({detail: {prop: "onChange"}}) }},
    fullProps: {error:"error",label:"label",name:"name",onChange:function () { dispatchEvent({detail: {prop: "onChange"}}) },tooltip:"tooltip",value:true}
  },
  ComponentsPreviewErrorMessage: {
    name: 'ComponentsPreviewErrorMessage',
    menu: 'Components Preview ErrorMessage',
    file: './components/preview/ErrorMessage.react.js',
    component: ComponentsPreviewErrorMessage,
    componentName: 'ErrorMessage',
    description: '',
    customProps: {},
    propsDefinition: {children:{type:{name:"any"},required:true,description:""},kind:{type:{name:"enum",value:[{value:"'plain'",computed:false},{value:"'block'",computed:false}]},required:false,description:"",defaultValue:{value:"'block'",computed:false}}},
    simpleProps: {children:"ANY children",kind:"block"},
    fullProps: {children:"ANY children",kind:"block"}
  },
  ComponentsPreviewHeading: {
    name: 'ComponentsPreviewHeading',
    menu: 'Components Preview Heading',
    file: './components/preview/Heading.react.js',
    component: ComponentsPreviewHeading,
    componentName: 'Heading',
    description: '',
    customProps: {},
    propsDefinition: {centered:{type:{name:"bool"},required:false,description:""},children:{type:{name:"any"},required:true,description:""},decorated:{type:{name:"bool"},required:false,description:"",defaultValue:{value:"true",computed:false}},decorationColor:{type:{name:"string"},required:false,description:""},inheritedStyle:{type:{name:"union",value:[{name:"object"},{name:"array"}]},required:false,description:""},kind:{type:{name:"enum",value:[{value:"'h1'",computed:false},{value:"'h2'",computed:false},{value:"'h3'",computed:false},{value:"'h4'",computed:false},{value:"'h5'",computed:false}]},required:true,description:""},noMargin:{type:{name:"bool"},required:false,description:""},thin:{type:{name:"bool"},required:false,description:""},withSubheading:{type:{name:"bool"},required:false,description:""}},
    simpleProps: {kind:"h1",decorated:true,children:"ANY children"},
    fullProps: {withSubheading:true,noMargin:true,decorationColor:"decorationColor",kind:"h1",centered:true,inheritedStyle:null,decorated:true,thin:true,children:"ANY children"}
  },
  ComponentsPreviewLoader: {
    name: 'ComponentsPreviewLoader',
    menu: 'Components Preview Loader',
    file: './components/preview/Loader.react.js',
    component: ComponentsPreviewLoader,
    componentName: 'Loader',
    description: '',
    customProps: {},
    propsDefinition: {variant:{type:{name:"enum",value:[{value:"'fluid'",computed:false},{value:"'sections'",computed:false},{value:"'css'",computed:false},{value:"'sectionsCss'",computed:false}]},required:false,description:"",defaultValue:{value:"'fluid'",computed:false}}},
    simpleProps: {variant:"fluid"},
    fullProps: {variant:"fluid"}
  },
  ComponentsPreviewLogo: {
    name: 'ComponentsPreviewLogo',
    menu: 'Components Preview Logo',
    file: './components/preview/Logo.js',
    component: ComponentsPreviewLogo,
    componentName: 'Logo',
    description: '',
    customProps: {},
    propsDefinition: {},
    simpleProps: {},
    fullProps: {}
  },
  ComponentsPreviewMultiField: {
    name: 'ComponentsPreviewMultiField',
    menu: 'Components Preview MultiField',
    file: './components/preview/MultiField.react.js',
    component: ComponentsPreviewMultiField,
    componentName: 'MultiField',
    description: '',
    customProps: {},
    propsDefinition: {delimiter:{type:{name:"string"},required:false,description:"",defaultValue:{value:"'-'",computed:false}},error:{type:{name:"string"},required:false,description:"",defaultValue:{value:"'Default error message'",computed:false}},fields:{type:{name:"arrayOf",value:{name:"shape",value:{length:{name:"number",required:true},placeholder:{name:"string",required:false},type:{name:"enum",value:[{value:"'text'",computed:false},{value:"'number'",computed:false}],required:false}}}},required:false,description:"",defaultValue:{value:"[\n  {length: 1, type: 'text'},\n  {length: 1, type: 'text'},\n  {length: 1, type: 'text'},\n  {length: 1, type: 'text'}\n]",computed:false}},inheritedStyle:{type:{name:"object"},required:false,description:""},label:{type:{name:"string"},required:true,description:""},name:{type:{name:"string"},required:true,description:""},onBlur:{type:{name:"func"},required:false,description:""},onChange:{type:{name:"func"},required:false,description:""},value:{type:{name:"string"},required:false,description:""}},
    simpleProps: {onBlur:function () { dispatchEvent({detail: {prop: "onBlur"}}) },delimiter:"-",error:"Default error message",name:"name",onChange:function () { dispatchEvent({detail: {prop: "onChange"}}) },label:"label",fields:[{length:1,type:"text"},{length:1,type:"text"},{length:1,type:"text"},{length:1,type:"text"}]},
    fullProps: {onBlur:function () { dispatchEvent({detail: {prop: "onBlur"}}) },delimiter:"-",error:"Default error message",name:"name",onChange:function () { dispatchEvent({detail: {prop: "onChange"}}) },value:"value",label:"label",inheritedStyle:{},fields:[{length:1,type:"text"},{length:1,type:"text"},{length:1,type:"text"},{length:1,type:"text"}]}
  },
  ComponentsPreviewPasswordField: {
    name: 'ComponentsPreviewPasswordField',
    menu: 'Components Preview PasswordField',
    file: './components/preview/PasswordField.react.js',
    component: ComponentsPreviewPasswordField,
    componentName: 'PasswordField',
    description: '',
    customProps: {},
    propsDefinition: {error:{type:{name:"string"},required:false,description:""},hidePasswordToggle:{type:{name:"bool"},required:false,description:"",defaultValue:{value:"false",computed:false}},label:{type:{name:"string"},required:false,description:""},name:{type:{name:"string"},required:true,description:""},onChange:{type:{name:"func"},required:false,description:""},placeholder:{type:{name:"string"},required:false,description:""},tooltip:{type:{name:"string"},required:false,description:""},type:{type:{name:"string"},required:true,description:"",defaultValue:{value:"'password'",computed:false}},value:{type:{name:"string"},required:false,description:""}},
    simpleProps: {name:"name",onChange:function () { dispatchEvent({detail: {prop: "onChange"}}) },hidePasswordToggle:false,type:"password"},
    fullProps: {tooltip:"tooltip",error:"error",name:"name",onChange:function () { dispatchEvent({detail: {prop: "onChange"}}) },value:"value",hidePasswordToggle:false,placeholder:"placeholder",label:"label",type:"password"}
  },
  ComponentsPreviewSpinner: {
    name: 'ComponentsPreviewSpinner',
    menu: 'Components Preview Spinner',
    file: './components/preview/Spinner.react.js',
    component: ComponentsPreviewSpinner,
    componentName: 'Spinner',
    description: '',
    customProps: {},
    propsDefinition: {color:{type:{name:"string"},required:false,description:"",defaultValue:{value:"'black'",computed:false}}},
    simpleProps: {color:"black"},
    fullProps: {color:"black"}
  },
  ComponentsPreviewTextField: {
    name: 'ComponentsPreviewTextField',
    menu: 'Components Preview TextField',
    file: './components/preview/TextField.react.js',
    component: ComponentsPreviewTextField,
    componentName: 'TextField',
    description: '',
    customProps: {},
    propsDefinition: {error:{type:{name:"string"},required:false,description:""},fullWidth:{type:{name:"bool"},required:false,description:"",defaultValue:{value:"false",computed:false}},icon:{type:{name:"string"},required:false,description:""},iconSize:{type:{name:"string"},required:false,description:""},inheritedStyle:{type:{name:"object"},required:false,description:""},label:{type:{name:"string"},required:false,description:""},name:{type:{name:"string"},required:true,description:""},onBlur:{type:{name:"func"},required:false,description:""},onChange:{type:{name:"func"},required:false,description:""},placeholder:{type:{name:"string"},required:false,description:""},tooltip:{type:{name:"string"},required:false,description:""},type:{type:{name:"string"},required:true,description:"",defaultValue:{value:"'text'",computed:false}},unit:{type:{name:"string"},required:false,description:""},value:{type:{name:"string"},required:false,description:""}},
    simpleProps: {onBlur:function () { dispatchEvent({detail: {prop: "onBlur"}}) },name:"name",onChange:function () { dispatchEvent({detail: {prop: "onChange"}}) },fullWidth:false,type:"text"},
    fullProps: {tooltip:"tooltip",unit:"unit",onBlur:function () { dispatchEvent({detail: {prop: "onBlur"}}) },error:"error",name:"name",onChange:function () { dispatchEvent({detail: {prop: "onChange"}}) },value:"value",placeholder:"placeholder",label:"label",fullWidth:false,inheritedStyle:{},icon:"icon",iconSize:"iconSize",type:"text"}
  },
  ComponentsPreviewToolTip: {
    name: 'ComponentsPreviewToolTip',
    menu: 'Components Preview ToolTip',
    file: './components/preview/ToolTip.react.js',
    component: ComponentsPreviewToolTip,
    componentName: 'ToolTip',
    description: '',
    customProps: {},
    propsDefinition: {children:{type:{name:"any"},required:true,description:""},inheritedStyles:{type:{name:"union",value:[{name:"array"},{name:"object"}]},required:false,description:""},kind:{type:{name:"enum",value:[{value:"'top'",computed:false},{value:"'bottom'",computed:false},{value:"'left'",computed:false},{value:"'right'",computed:false}]},required:true,description:"",defaultValue:{value:"'top'",computed:false}}},
    simpleProps: {children:"ANY children",kind:"top"},
    fullProps: {children:"ANY children",inheritedStyles:null,kind:"top"}
  },
}
